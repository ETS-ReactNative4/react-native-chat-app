{"ast":null,"code":"var _jsxFileName = \"/Users/calebkress/Repos/ssbu-viz/src/Viz.js\";\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nvar Viz = function Viz(props) {\n  useEffect(function () {\n    d3.select('.viz > *').remove();\n    draw(props);\n  }, [props.shapes.length]);\n  return React.createElement(\"div\", {\n    className: \"viz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n};\n\nvar draw = function draw(props) {\n  var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n  var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  d3.select('.viz').append('svg').attr('height', h).attr('width', w).attr('id', 'svg-viz');\n  var bubbles = props.shapes;\n  var max = d3.max(bubbles);\n  var radiusScale = d3.scaleSqrt().domain([0, max]).range([0, max]);\n  var simulation = d3.forceSimulation().force('x', d3.forceX(w / 3).strength(0.05)).force('y', d3.forceY(h / 3).strength(0.05)).force('charge', d3.forceManyBody().strength(-1300)).force('collide', d3.forceCollide(function (d) {\n    return radiusScale(d.number) + 1;\n  }));\n  var circles = d3.select('#svg-viz').selectAll('circle').data(props.shapes).enter().append('svg:circle').attr('r', function (d) {\n    return d.width / 2 + \"px\";\n  }).style('fill', function (d) {\n    return d.color ? d.color : null;\n  });\n  simulation.nodes(props.shapes).on('tick', ticked);\n\n  function ticked() {\n    circles.attr('cx', function (d) {\n      return d.x;\n    }).attr('cy', function (d) {\n      return d.y;\n    });\n  }\n};\n\nexport default Viz; // export default class Viz extends Component {\n//   componentDidMount() {\n//   \tthis.draw(this.props)\n//   }\n//   componentDidUpdate(prevProps){\n//     //this makes sure we don't redraw unnecessarily --\n//     //only when we add a new shape\n//     if(this.props.shapes.length !== prevProps.shapes.length){\n//       d3.select('.viz > *').remove();\n//       this.draw(this.props)\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className=\"viz\" />\n//     )\n//   }\n//  draw = (props) => {\n//    const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n//    const h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n//    d3.select('.viz').append('svg')\n//      .attr('height', h)\n//      .attr('width', w)\n//      .attr('id', 'svg-viz')\n//    const bubbles = props.shapes\n//    const max = d3.max(bubbles)\n//  \tconst radiusScale = d3.scaleSqrt().domain([0, max]).range([0, max])\n//  \tconst simulation = d3.forceSimulation()\n//  \t\t.force('x', d3.forceX(w/3).strength(0.05))\n//  \t\t.force('y', d3.forceY(h/3).strength(0.05))\n//  \t\t.force('charge', d3.forceManyBody().strength(-1300))\n//  \t\t.force('collide', d3.forceCollide(d => radiusScale(d.number)+1))\n// const circles = d3.select('#svg-viz').selectAll('circle')\n//   .data(props.shapes)\n//   .enter()\n//   .append('svg:circle')\n//   .attr('r', d => d.width/2+\"px\")\n//   .style('fill', (d) => d.color ? d.color : 'purple')\n// simulation.nodes(props.shapes)\n// .on('tick', ticked)\n// function ticked() {\n//  \t  circles\n//  \t  .attr('cx', d => d.x)\n//  \t  .attr('cy', d => d.y)\n//  \t}\n//  }\n// }","map":{"version":3,"sources":["/Users/calebkress/Repos/ssbu-viz/src/Viz.js"],"names":["React","useEffect","d3","Viz","props","select","remove","draw","shapes","length","w","Math","max","document","documentElement","clientWidth","window","innerWidth","h","clientHeight","innerHeight","append","attr","bubbles","radiusScale","scaleSqrt","domain","range","simulation","forceSimulation","force","forceX","strength","forceY","forceManyBody","forceCollide","d","number","circles","selectAll","data","enter","width","style","color","nodes","on","ticked","x","y"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst Viz = (props) => {\n  useEffect(() => {\n   d3.select('.viz > *').remove();\n   draw(props)\n }, [props.shapes.length])\n  return <div className=\"viz\" />\n}\n\nconst draw = (props) => {\n    const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    const h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    d3.select('.viz').append('svg')\n      .attr('height', h)\n      .attr('width', w)\n      .attr('id', 'svg-viz')\n\n    const bubbles = props.shapes\n    const max = d3.max(bubbles)\n    const radiusScale = d3.scaleSqrt().domain([0, max]).range([0, max])\n\n    const simulation = d3.forceSimulation()\n      .force('x', d3.forceX(w/3).strength(0.05))\n      .force('y', d3.forceY(h/3).strength(0.05))\n      .force('charge', d3.forceManyBody().strength(-1300))\n      .force('collide', d3.forceCollide(d => radiusScale(d.number)+1))\n\n  const circles = d3.select('#svg-viz').selectAll('circle')\n    .data(props.shapes)\n    .enter()\n    .append('svg:circle')\n    .attr('r', d => d.width/2+\"px\")\n    .style('fill', (d) => d.color ? d.color : null)\n\n  simulation.nodes(props.shapes)\n  .on('tick', ticked)\n\n  function ticked() {\n      circles\n      .attr('cx', d => d.x)\n      .attr('cy', d => d.y)\n    }\n  }\nexport default Viz\n\n\n// export default class Viz extends Component {\n//   componentDidMount() {\n//   \tthis.draw(this.props)\n//   }\n//   componentDidUpdate(prevProps){\n//     //this makes sure we don't redraw unnecessarily --\n//     //only when we add a new shape\n//     if(this.props.shapes.length !== prevProps.shapes.length){\n//       d3.select('.viz > *').remove();\n//       this.draw(this.props)\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"viz\" />\n//     )\n//   }\n\n //  draw = (props) => {\n //    const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n //    const h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n //    d3.select('.viz').append('svg')\n //      .attr('height', h)\n //      .attr('width', w)\n //      .attr('id', 'svg-viz')\n\n //    const bubbles = props.shapes\n //    const max = d3.max(bubbles)\n //  \tconst radiusScale = d3.scaleSqrt().domain([0, max]).range([0, max])\n\n //  \tconst simulation = d3.forceSimulation()\n //  \t\t.force('x', d3.forceX(w/3).strength(0.05))\n //  \t\t.force('y', d3.forceY(h/3).strength(0.05))\n //  \t\t.force('charge', d3.forceManyBody().strength(-1300))\n //  \t\t.force('collide', d3.forceCollide(d => radiusScale(d.number)+1))\n\n\t// const circles = d3.select('#svg-viz').selectAll('circle')\n\t//   .data(props.shapes)\n\t//   .enter()\n\t//   .append('svg:circle')\n\t//   .attr('r', d => d.width/2+\"px\")\n\t//   .style('fill', (d) => d.color ? d.color : 'purple')\n\n\t// simulation.nodes(props.shapes)\n\t// .on('tick', ticked)\n\n\t// function ticked() {\n //  \t  circles\n //  \t  .attr('cx', d => d.x)\n //  \t  .attr('cy', d => d.y)\n //  \t}\n //  }\n\n// }\n"]},"metadata":{},"sourceType":"module"}